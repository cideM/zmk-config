#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,physical-layout = &layout_ortho_4x12_all1u;
    };

    macros {
      ZMK_MACRO(thumbs_up, wait-ms = <1>; tap-ms = <5>; bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;)
    };
    
    tap_dances {
      shifty: shift_caps_word {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_SHIFTY";
        #binding-cells = <0>;
        tapping-term-ms = <150>;
        bindings = <&kp LSHFT>, <&caps_word>;
      };
    };

// Conditional layer only when we have less thumb keys
#ifdef TBLE_DUAL_2U
    cond_layers {
        compatible = "zmk,conditional-layers";
	tri {
	    if-layers = <NUM_L NAV_L>;
	    then-layer = <SYM_L>;
        };
    };
#endif

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
              &kp TAB        &kp Q       &kp W    &kp E      &kp R    &kp T      &kp Y     &kp U      &kp I         &kp O      &kp P     &kp BSPC
              &mt LCTRL ESC  &kp A       &kp S    &kp D      &kp F    &kp G      &kp H     &kp J      &kp K         &kp L      &kp SEMI  &kp SQT
              &kp LSHFT      &kp Z       &kp X    &kp C      &kp V    &kp B      &kp N     &kp M      &kp COMMA     &kp DOT    &kp FSLH  &mt RSHFT RET
              &kp LCTRL      &kp LGUI    &mo 2    &kp LALT   &mo 1    &kp SPACE  &kp LGUI  &lt 2 CAPS &mt RALT LEFT &kp DOWN   &kp UP    &mt RGUI RIGHT
            >;
        };

      lower_layer {
            display-name = "Lower";
            bindings = 
              &kp GRAVE  &kp EXCL    &kp AT     &kp HASH  &kp DOLLAR  &kp LT      &kp GT    &kp LPAR   &kp RPAR   &kp LBKT    &kp RBKT     &trans
              &kp TILDE  &kp PERCENT &kp CARET  &kp AMPS  &kp STAR    &kp BSLH    &kp FSLH  &kp MINUS  &kp UNDER  &kp LBRC    &kp RBRC     &trans
              &kp PIPE   &kp EQUAL   &kp PLUS   &kp SEMI  &kp COLON   &kp SQT     &kp DQT   &kp COMMA  &kp DOT    &kp QMARK   &kp SLASH    &trans
              &trans     &trans      &trans     &trans    &trans      &trans      &trans    &trans     &trans     &trans      &trans       &trans
            >;
        };

      raise_layer {
            display-name = "Raise";
            bindings = 
              &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP     &trans   &trans   &trans   &trans
              &trans        &kp C_STOP    &kp C_RW    &kp C_PLAY  &kp C_PAUSE &kp C_FF    &kp C_AC_BACK &kp C_AC_FORWARD &trans   &trans   &trans   &trans
              &trans        &trans        &trans      &trans      &kp PG_UP   &kp PG_DN   &trans        &trans           &trans   &trans   &trans   &trans
              &trans        &trans        &trans      &trans      &kp HOME    &kp END     &trans        &trans           &trans   &trans   &trans   &trans
            >;
        };
    };
};

