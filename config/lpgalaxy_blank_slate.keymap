#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,physical-layout = &layout_ortho_4x12_all1u;
    };

    behaviors {
      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick-tap-ms = <100>;
          flavor = "tap-unless-interrupted";
          bindings = <&kp>, <&kp>;
      };
    };

    cond_layers {
      compatible = "zmk,conditional-layers";
      tri {
          if-layers = <1 2>;
          then-layer = <3>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
          bindings = <
            &kp TAB        &kp Q       &kp W      &kp E      &kp R        &kp T      &kp Y     &kp U        &kp I      &kp O      &kp P           &kp BSPC
            &mt LCTRL ESC  &hm LCTRL A &hm LGUI S &hm LALT D &hm LSHIFT F &kp G      &kp H     &hm RSHFT J  &hm RALT K &hm RGUI L &hm RCTRL SEMI  &mt RCTRL SQT
            &kp LSHFT      &kp Z       &kp X      &kp C      &kp V        &kp B      &kp N     &kp M        &kp COMMA  &kp DOT    &kp FSLH        &mt RSHFT RET
            &kp CAPS       &kp C_MUTE  &kp C_PP   &kp LALT   &mo 1        &kp SPACE  &kp LGUI  &mo 2        &kp LEFT   &kp DOWN   &kp UP          &kp RIGHT
          >;
        };

        lower {
          bindings = <
              &kp LS(GRAVE) &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4) &kp LS(N5) &kp LS(N6) &kp LS(N7)   &kp LS(N8)   &kp LS(N9)   &kp LS(N0)   &kp DEL
              &kp DEL       &kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &kp F6     &kp UNDER    &kp PLUS     &kp LBRC     &kp RBRC     &kp PIPE
              &trans        &kp F7     &kp F8     &kp F9     &kp F10    &kp F11    &kp F12    &kp LBKT     &kp RBKT     &kp HOME     &kp END      &trans
              &trans        &trans     &trans     &trans     &trans     &trans     &trans     &trans       &kp C_NEXT   &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
          >;
        };

        raise {
          bindings = <
              &kp GRAVE &kp N1   &kp N2   &kp N3 &kp N4    &kp N5  &kp N6  &kp N7    &kp N8     &kp N9       &kp N0       &kp BSPC
              &kp DEL   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp F5  &kp F6  &kp MINUS &kp EQUAL  &kp LBKT     &kp RBKT     &kp BSLH
              &trans    &kp F7   &kp F8   &kp F9 &kp F10   &kp F11 &kp F12 &kp HASH  &kp BSLH   &kp PG_UP    &kp PG_DN    &trans
              &trans    &trans   &trans   &trans &trans    &trans  &trans  &trans    &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
          >;
        };

        adjust {
          bindings = <
              &trans    &kp K_LOCK &trans   &trans &trans    &trans  &trans  &kp C_BRI_AUTO &kp C_BRI_UP &kp C_BRI_DN   &trans  &trans
              &trans    &trans     &trans   &trans &trans    &trans  &trans  &kp C_MUTE     &kp C_VOL_UP &kp C_VOL_DN   &trans  &trans
              &trans    &trans     &trans   &trans &trans    &trans  &trans  &kp C_PP       &kp C_NEXT   &kp C_PREV     &trans  &trans
              &trans    &trans     &trans   &trans &trans    &trans  &trans  &trans         &trans       &trans         &trans  &trans
          >;
        };

    };
};
